<?xml version="1.0"?>
<ruleset name="SlevomatCsobGateway">
	<rule ref="vendor/consistence/coding-standard/Consistence/ruleset.xml">
		<exclude name="Squiz.Commenting.FunctionComment.IncorrectParamVarName"/>
		<exclude name="Squiz.Functions.MultiLineFunctionDeclaration.SpaceAfterBracket"/><!-- conflicts with return typehints in anonymous functions -->
	</rule>
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/ruleset.xml">
		<exclude name="SlevomatCodingStandard.Files.TypeNameMatchesFileName"/>
		<exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameAfterKeyword"/>
		<exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions"/>
		<exclude name="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly"/>
		<exclude name="SlevomatCodingStandard.Namespaces.UseOnlyWhitelistedNamespaces"/>
		<exclude name="SlevomatCodingStandard.Classes.ClassConstantVisibility.MissingConstantVisibility"/>
		<exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation.NonFullyQualifiedClassName"/>
	</rule>
	<rule ref="Consistence.NamingConventions.ValidVariableName.NotCamelCaps">
		<exclude-pattern>tests/unit/Crypto/GlobalFunctionsMock.php</exclude-pattern>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
		<properties>
			<property name="searchAnnotations" value="true"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration">
		<properties>
			<property name="enableNullableTypeHints" value="false"/>
			<property name="enableVoidTypeHint" value="false"/>
			<property name="usefulAnnotations" type="array" value="
				@dataProvider,
				@runInSeparateProcess
			"/>
		</properties>
	</rule>
	<rule ref="Squiz.Functions.GlobalFunction.Found">
		<exclude-pattern>tests/unit/Api/Driver/CurlMock.php</exclude-pattern>
		<exclude-pattern>tests/unit/Api/Driver/Curl_exec_false_Mock.php</exclude-pattern>
		<exclude-pattern>tests/unit/Crypto/GlobalFunctionsMock.php</exclude-pattern>
	</rule>
</ruleset>
